{
  "contractName": "ProofUtils",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"AZTEC Copyright Spilsbury Holdings Ltd 2019. All rights reserved.*\",\"methods\":{},\"title\":\"Library of proof utility functions\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@aztec/protocol/contracts/libs/ProofUtils.sol\":\"ProofUtils\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@aztec/protocol/contracts/libs/ProofUtils.sol\":{\"keccak256\":\"0xce4dfdc9af28abe040d0ae2fdff1ed32b225623dac56597810f6076204ab2b9b\",\"urls\":[\"bzzr://5284bf722d4353c6f3bdad07ac35271580bbceba7646287bd36d01061c704807\"]}},\"version\":1}",
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058207e09223111738b9f10bc8f562bb4e1f3af06cbad38ce8e47a0218a06fc52ad000029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058207e09223111738b9f10bc8f562bb4e1f3af06cbad38ce8e47a0218a06fc52ad000029",
  "sourceMap": "168:640:33:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "168:640:33:-;;;;;;;;",
  "source": "pragma solidity >= 0.5.0 <0.6.0;\n\n/**\n * @title Library of proof utility functions\n * @author AZTEC\n * Copyright Spilsbury Holdings Ltd 2019. All rights reserved.\n **/\nlibrary ProofUtils {\n\n    /**\n     * @dev We compress three uint8 numbers into only one uint24 to save gas.\n     * Reverts if the category is not one of [1, 2, 3, 4].\n     * @param proof The compressed uint24 number.\n     * @return A tuple (uint8, uint8, uint8) representing the epoch, category and proofId.\n     */\n    function getProofComponents(uint24 proof) internal pure returns (uint8 epoch, uint8 category, uint8 id) {\n        assembly {\n            id := and(proof, 0xff)\n            category := and(div(proof, 0x100), 0xff)\n            epoch := and(div(proof, 0x10000), 0xff)\n        }\n        return (epoch, category, id);\n    }\n}\n",
  "sourcePath": "@aztec/protocol/contracts/libs/ProofUtils.sol",
  "ast": {
    "absolutePath": "@aztec/protocol/contracts/libs/ProofUtils.sol",
    "exportedSymbols": {
      "ProofUtils": [
        3439
      ]
    },
    "id": 3440,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3420,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:33"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Library of proof utility functions\n@author AZTEC\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*",
        "fullyImplemented": true,
        "id": 3439,
        "linearizedBaseContracts": [
          3439
        ],
        "name": "ProofUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3437,
              "nodeType": "Block",
              "src": "592:214:33",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "id": {
                        "declaration": 3429,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "625:2:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "category": {
                        "declaration": 3427,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "660:8:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "epoch": {
                        "declaration": 3425,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "713:5:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 3422,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "635:5:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 3422,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "680:5:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 3422,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "730:5:33",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 3431,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    id := and(proof, 0xff)\n    category := and(div(proof, 0x100), 0xff)\n    epoch := and(div(proof, 0x10000), 0xff)\n}",
                  "src": "602:175:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 3432,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3425,
                        "src": "779:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3433,
                        "name": "category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3427,
                        "src": "786:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3434,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3429,
                        "src": "796:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 3435,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "778:21:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 3430,
                  "id": 3436,
                  "nodeType": "Return",
                  "src": "771:28:33"
                }
              ]
            },
            "documentation": "@dev We compress three uint8 numbers into only one uint24 to save gas.\nReverts if the category is not one of [1, 2, 3, 4].\n@param proof The compressed uint24 number.\n@return A tuple (uint8, uint8, uint8) representing the epoch, category and proofId.",
            "id": 3438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProofComponents",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3422,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "516:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 3421,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "515:14:33"
            },
            "returnParameters": {
              "id": 3430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3425,
                  "name": "epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "553:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3427,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "566:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3426,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3429,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "582:8:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3428,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:39:33"
            },
            "scope": 3439,
            "src": "488:318:33",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 3440,
        "src": "168:640:33"
      }
    ],
    "src": "0:809:33"
  },
  "legacyAST": {
    "absolutePath": "@aztec/protocol/contracts/libs/ProofUtils.sol",
    "exportedSymbols": {
      "ProofUtils": [
        3439
      ]
    },
    "id": 3440,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3420,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:33"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Library of proof utility functions\n@author AZTEC\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*",
        "fullyImplemented": true,
        "id": 3439,
        "linearizedBaseContracts": [
          3439
        ],
        "name": "ProofUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3437,
              "nodeType": "Block",
              "src": "592:214:33",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "id": {
                        "declaration": 3429,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "625:2:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "category": {
                        "declaration": 3427,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "660:8:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "epoch": {
                        "declaration": 3425,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "713:5:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 3422,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "635:5:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 3422,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "680:5:33",
                        "valueSize": 1
                      }
                    },
                    {
                      "proof": {
                        "declaration": 3422,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "730:5:33",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 3431,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    id := and(proof, 0xff)\n    category := and(div(proof, 0x100), 0xff)\n    epoch := and(div(proof, 0x10000), 0xff)\n}",
                  "src": "602:175:33"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 3432,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3425,
                        "src": "779:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3433,
                        "name": "category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3427,
                        "src": "786:8:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3434,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3429,
                        "src": "796:2:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 3435,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "778:21:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 3430,
                  "id": 3436,
                  "nodeType": "Return",
                  "src": "771:28:33"
                }
              ]
            },
            "documentation": "@dev We compress three uint8 numbers into only one uint24 to save gas.\nReverts if the category is not one of [1, 2, 3, 4].\n@param proof The compressed uint24 number.\n@return A tuple (uint8, uint8, uint8) representing the epoch, category and proofId.",
            "id": 3438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProofComponents",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3422,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "516:12:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 3421,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "515:14:33"
            },
            "returnParameters": {
              "id": 3430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3425,
                  "name": "epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "553:11:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3427,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "566:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3426,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3429,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "582:8:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3428,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:39:33"
            },
            "scope": 3439,
            "src": "488:318:33",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 3440,
        "src": "168:640:33"
      }
    ],
    "src": "0:809:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.15",
  "updatedAt": "2019-09-08T05:27:41.735Z",
  "devdoc": {
    "author": "AZTEC Copyright Spilsbury Holdings Ltd 2019. All rights reserved.*",
    "methods": {},
    "title": "Library of proof utility functions"
  },
  "userdoc": {
    "methods": {}
  }
}