{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","helper.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","web3Obj","web3","Web3","setweb3","provider","console","log","providers","HttpProvider","sessionStorage","setItem","initialize","a","defaultTorus","Torus","default","torus","init","buildEnv","login","App","state","maxBid","bid","startButton","account","balance","setStateInfo","eth","getAccounts","then","accounts","setState","getBalance","enableTorus","error","getItem","this","className","onClick","type","value","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6SAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,8KCNnBC,EAAU,CACZC,KAAM,IAAIC,IACVC,QAAS,SAAUC,GACfC,QAAQC,IAAI,iBAAkBF,GAC9BJ,EAAQC,KAAO,IAAIC,IAAK,IAAIA,IAAKK,UAAUC,aAAa,2BACxDC,eAAeC,QAAQ,kBAAkB,IAE7CC,WAAW,WAAD,2BAAE,gCAAAC,EAAA,qEACmB,wDADnB,cACFC,EADE,OAEFC,EAAQD,EAAaE,QACrBC,EAAQ,IAAIF,EAHV,SAIFE,EAAMC,KAAK,CAACC,SAAU,gBAJpB,uBAKFF,EAAMG,QALJ,OAMRnB,EAAQG,QAAQa,EAAMZ,UANd,0CAAF,kDAAC,IASAJ,IC8CAoB,E,2MA5DbC,MAAQ,CACNC,OAAQ,IACRC,IAAK,EACLC,aAAa,EACbC,QAAS,GACTC,QAAS,I,EAeXC,aAAe,WAEb3B,EAAQC,KAAK2B,IAAIC,cAAcC,KAAK,SAAAC,GAClC,EAAKC,SAAS,CAAEP,QAASM,EAAS,KAClC/B,EAAQC,KAAK2B,IAAIK,WAAWF,EAAS,IAAID,KAAK,SAAAJ,GAC5C,EAAKM,SAAS,CAAEN,QAAUA,EAAS,KAAQH,IAAyB,IAApB,EAAKF,MAAMC,c,EAKjEY,Y,qBAAc,sBAAAtB,EAAA,8EAEJZ,EAAQW,aAFJ,OAGV,EAAKgB,eAHK,+CAKVtB,QAAQ8B,MAAR,MALU,sD,mFAtBO,IAAD,OACF1B,eAAe2B,QAAQ,mBAGrCC,KAAKL,SAAS,CAAER,aAAa,GAC3B,kBAAMxB,EAAQW,aAAamB,KAAK,WAC9B,EAAKH,qB,+BA0BX,OACE,yBAAKW,UAAU,OACb,8BAC+B,IAA3BD,KAAKhB,MAAMG,aAAuB,4BAAQe,QAASF,KAAKH,aAAtB,sBAEtC,6BAEE,wCAAeG,KAAKhB,MAAMC,OAA1B,KACA,yCAAee,KAAKhB,MAAMI,SAC1B,yCAAeY,KAAKhB,MAAMK,SAC1B,2BAAOc,KAAM,SAAUC,MAAQJ,KAAKhB,MAAME,IAAMmB,YAAa,QAC7D,4BAAQH,QAAS,WACflC,QAAQC,IAAI,WADd,iB,GApDQqC,IAAMC,WCKR,SAFAnC,eAAe2B,QAAQ,mBAGrC,wDAAiCN,KAAK,WACpCzB,QAAQC,IAAI,oBACZN,EAAQG,YAKZ0C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1c5069fe.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 303;","import Web3 from 'web3'\n\nconst web3Obj = {\n    web3: new Web3(),\n    setweb3: function (provider) {\n        console.log(\"PROVIDERRRRRR \", provider);\n        web3Obj.web3 = new Web3(new Web3.providers.HttpProvider('https://localhost:8545'));\n        sessionStorage.setItem('pageUsingTorus', true)\n    },\n    initialize: async function () {\n        const defaultTorus = await import('@toruslabs/torus-embed');\n        const Torus = defaultTorus.default;\n        const torus = new Torus();\n        await torus.init({buildEnv: 'development'});\n        await torus.login();\n        web3Obj.setweb3(torus.provider)\n    }\n};\nexport default web3Obj\n","import React from 'react'\nimport web3Obj from './helper'\n\nclass App extends React.Component {\n  state = {\n    maxBid: 100,\n    bid: 0,\n    startButton: true,\n    account: '',\n    balance: ''\n  };\n\n  componentDidMount() {\n    const isTorus = sessionStorage.getItem('pageUsingTorus');\n\n    if (isTorus) {\n      this.setState({ startButton: false},\n        () => web3Obj.initialize().then(() => {\n          this.setStateInfo()\n        })\n      )\n    }\n  }\n\n  setStateInfo = () => {\n    // TODO: Handle current maxbid value\n    web3Obj.web3.eth.getAccounts().then(accounts => {\n      this.setState({ account: accounts[0] });\n      web3Obj.web3.eth.getBalance(accounts[0]).then(balance => {\n        this.setState({ balance: (balance/(1e18)), bid: this.state.maxBid * 1.1 }) // Balance is wei\n      })\n    })\n  };\n\n  enableTorus = async () => {\n    try {\n      await web3Obj.initialize();\n      this.setStateInfo()\n    } catch (error) {\n      console.error(error)\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          { this.state.startButton === true ? <button onClick={this.enableTorus}>Start using Torus</button> : false }\n        </div>\n        <div>\n          {/* <button onClick={this.enableTorus}>Enable Torus</button> */}\n          <div>MaxBID: { this.state.maxBid } </div>\n          <div>Account: {this.state.account}</div>\n          <div>Balance: {this.state.balance}</div>\n          <input type={\"number\"} value={ this.state.bid } placeholder={\"Bid\"}/>\n          <button onClick={()=> {\n            console.log(\"POST \" );\n          }} >BID NOW</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport web3Obj from './helper'\n\nconst isTorus = sessionStorage.getItem('pageUsingTorus');\n\nif (isTorus === 'true') {\n  import('@toruslabs/torus-embed').then(() => {\n    console.log('rehydrated Torus');\n    web3Obj.setweb3()\n    // set store accounts from here ideally\n  })\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}